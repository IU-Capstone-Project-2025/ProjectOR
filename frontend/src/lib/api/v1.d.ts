/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/api/health-check': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Health Check */
		get: operations['health_check_api_health_check_get'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/projects/': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Get Projects */
		get: operations['get_projects_api_projects__get'];
		put?: never;
		/** Create Project */
		post: operations['create_project_api_projects__post'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/projects/all-applications': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Get User Applications */
		get: operations['get_user_applications_api_projects_all_applications_get'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/projects/{project_id}': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Get Project By Id */
		get: operations['get_project_by_id_api_projects__project_id__get'];
		put?: never;
		post?: never;
		/** Delete Project */
		delete: operations['delete_project_api_projects__project_id__delete'];
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/projects/{project_id}/apply': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Apply To Project */
		post: operations['apply_to_project_api_projects__project_id__apply_post'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/projects/{project_id}/applications': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Get Project Applications */
		get: operations['get_project_applications_api_projects__project_id__applications_get'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/projects/{project_id}/new-applications': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Get Project New Applications */
		get: operations['get_project_new_applications_api_projects__project_id__new_applications_get'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/projects/{project_id}/applications/approve': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		/** Approve Application */
		patch: operations['approve_application_api_projects__project_id__applications_approve_patch'];
		trace?: never;
	};
	'/api/projects/{project_id}/applications/cancel': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post?: never;
		/** Delete Application */
		delete: operations['delete_application_api_projects__project_id__applications_cancel_delete'];
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/projects/{project_id}/update': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Update Project */
		post: operations['update_project_api_projects__project_id__update_post'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/auth/token': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Login For Access Token */
		post: operations['login_for_access_token_api_auth_token_post'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/auth/register': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Register */
		post: operations['register_api_auth_register_post'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/user/set-role': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Set User Role */
		post: operations['set_user_role_api_user_set_role_post'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/user/get-me': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Get Me */
		post: operations['get_me_api_user_get_me_post'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/tags/generate/{project_id}': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Get Tags By Description */
		get: operations['get_tags_by_description_api_tags_generate__project_id__get'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/tags/add/{project_id}': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Add Project Tags */
		post: operations['add_project_tags_api_tags_add__project_id__post'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: {
		/** ActionResponse */
		ActionResponse: {
			/** Message */
			message: string;
			/** Success */
			success: boolean;
		};
		/** ApplicationSchema */
		ApplicationSchema: {
			/** Project Id */
			project_id: number;
			/** User Id */
			user_id: number;
			/** Is Approved */
			is_approved: boolean | null;
			/**
			 * Created At
			 * Format: date-time
			 */
			created_at: string;
			/** Feedback */
			feedback: string | null;
		};
		/** ApproveApplicationSchema */
		ApproveApplicationSchema: {
			/** Is Approved */
			is_approved: boolean;
			/** User Id */
			user_id: number;
			/** Feedback */
			feedback: string | null;
		};
		/** Body_login_for_access_token_api_auth_token_post */
		Body_login_for_access_token_api_auth_token_post: {
			/** Grant Type */
			grant_type?: string | null;
			/** Username */
			username: string;
			/** Password */
			password: string;
			/**
			 * Scope
			 * @default
			 */
			scope: string;
			/** Client Id */
			client_id?: string | null;
			/** Client Secret */
			client_secret?: string | null;
		};
		/** GeneratedTagsResponse */
		GeneratedTagsResponse: {
			/** Tags */
			tags: string[];
		};
		/** HTTPValidationError */
		HTTPValidationError: {
			/** Detail */
			detail?: components['schemas']['ValidationError'][];
		};
		/** NewProjectSchema */
		NewProjectSchema: {
			/** Title */
			title: string;
			/** Brief Description */
			brief_description: string;
			/** Description */
			description: string | null;
			/** Is Public */
			is_public: boolean | null;
			/** Is Opensource */
			is_opensource: boolean | null;
			/** Is Dead */
			is_dead: boolean | null;
		};
		/** ProjectMemberSchema */
		ProjectMemberSchema: {
			/** Project Id */
			project_id: number;
			/** User Id */
			user_id: number;
		};
		/** ProjectSchema */
		ProjectSchema: {
			/** Title */
			title: string;
			/** Brief Description */
			brief_description: string;
			/** Description */
			description: string | null;
			/** Is Public */
			is_public: boolean | null;
			/** Is Opensource */
			is_opensource: boolean | null;
			/** Is Dead */
			is_dead: boolean | null;
			/** Id */
			id: number;
			/**
			 * Created At
			 * Format: date-time
			 */
			created_at: string;
			/** Ceo Id */
			ceo_id: number | null;
			/** Tags */
			tags?: components['schemas']['Tag'][] | null;
		};
		/** SetUserRoleSchema */
		SetUserRoleSchema: {
			role: components['schemas']['UserRole'];
		};
		/** Tag */
		Tag: {
			/** Name */
			name: string;
		};
		/** TagSchema */
		TagSchema: {
			/** Name */
			name: string;
		};
		/** Token */
		Token: {
			/** Access Token */
			access_token: string;
			/** Token Type */
			token_type: string;
		};
		/** UpdateProjectRequest */
		UpdateProjectRequest: {
			/** Brief Description */
			brief_description: string;
			/** Description */
			description?: string | null;
		};
		/** User */
		User: {
			/** Id */
			id: number;
			/** Username */
			username: string;
			role: components['schemas']['UserRole'];
		};
		/** UserRegister */
		UserRegister: {
			/** Username */
			username: string;
			/** Password */
			password: string;
		};
		/**
		 * UserRole
		 * @enum {string}
		 */
		UserRole: 'VIEWER' | 'FOUNDER' | 'DEVELOPER' | 'INVESTOR';
		/** ValidationError */
		ValidationError: {
			/** Location */
			loc: (string | number)[];
			/** Message */
			msg: string;
			/** Error Type */
			type: string;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
	health_check_api_health_check_get: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': unknown;
				};
			};
		};
	};
	get_projects_api_projects__get: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ProjectSchema'][];
				};
			};
		};
	};
	create_project_api_projects__post: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['NewProjectSchema'];
			};
		};
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ProjectSchema'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	get_user_applications_api_projects_all_applications_get: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ApplicationSchema'][];
				};
			};
		};
	};
	get_project_by_id_api_projects__project_id__get: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				project_id: number;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ProjectSchema'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	delete_project_api_projects__project_id__delete: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				project_id: number;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ActionResponse'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	apply_to_project_api_projects__project_id__apply_post: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				project_id: number;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ApplicationSchema'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	get_project_applications_api_projects__project_id__applications_get: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				project_id: number;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ApplicationSchema'][];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	get_project_new_applications_api_projects__project_id__new_applications_get: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				project_id: number;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ApplicationSchema'][];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	approve_application_api_projects__project_id__applications_approve_patch: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				project_id: number;
			};
			cookie?: never;
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['ApproveApplicationSchema'];
			};
		};
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ProjectMemberSchema'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	delete_application_api_projects__project_id__applications_cancel_delete: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				project_id: number;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ActionResponse'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	update_project_api_projects__project_id__update_post: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				project_id: number;
			};
			cookie?: never;
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['UpdateProjectRequest'];
			};
		};
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ProjectSchema'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	login_for_access_token_api_auth_token_post: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody: {
			content: {
				'application/x-www-form-urlencoded': components['schemas']['Body_login_for_access_token_api_auth_token_post'];
			};
		};
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['Token'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	register_api_auth_register_post: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['UserRegister'];
			};
		};
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['Token'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	set_user_role_api_user_set_role_post: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['SetUserRoleSchema'];
			};
		};
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': {
						[key: string]: string;
					};
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	get_me_api_user_get_me_post: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['User'];
				};
			};
		};
	};
	get_tags_by_description_api_tags_generate__project_id__get: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				project_id: number;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['GeneratedTagsResponse'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	add_project_tags_api_tags_add__project_id__post: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				project_id: number;
			};
			cookie?: never;
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['TagSchema'][];
			};
		};
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['TagSchema'][];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
}
