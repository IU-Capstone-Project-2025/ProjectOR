/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/api/health-check': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Health Check */
		get: operations['health_check_api_health_check_get'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/projects/': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Get Projects */
		get: operations['get_projects_api_projects__get'];
		put?: never;
		/** Create Project */
		post: operations['create_project_api_projects__post'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/projects/{project_id}': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Get Project By Id */
		get: operations['get_project_by_id_api_projects__project_id__get'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/auth/token': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Login For Access Token */
		post: operations['login_for_access_token_api_auth_token_post'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/auth/register': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Register */
		post: operations['register_api_auth_register_post'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: {
		/** Body_login_for_access_token_api_auth_token_post */
		Body_login_for_access_token_api_auth_token_post: {
			/** Grant Type */
			grant_type?: string | null;
			/** Username */
			username: string;
			/** Password */
			password: string;
			/**
			 * Scope
			 * @default
			 */
			scope: string;
			/** Client Id */
			client_id?: string | null;
			/** Client Secret */
			client_secret?: string | null;
		};
		/** HTTPValidationError */
		HTTPValidationError: {
			/** Detail */
			detail?: components['schemas']['ValidationError'][];
		};
		/** NewProjectSchema */
		NewProjectSchema: {
			/** Title */
			title: string;
			/** Description */
			description: string | null;
			/** Is Public */
			is_public: boolean;
		};
		/** ProjectSchema */
		ProjectSchema: {
			/** Title */
			title: string;
			/** Description */
			description: string | null;
			/** Is Public */
			is_public: boolean;
			/** Id */
			id: number;
		};
		/** Token */
		Token: {
			/** Access Token */
			access_token: string;
			/** Token Type */
			token_type: string;
		};
		/** UserRegister */
		UserRegister: {
			/** Username */
			username: string;
			/** Password */
			password: string;
		};
		/** ValidationError */
		ValidationError: {
			/** Location */
			loc: (string | number)[];
			/** Message */
			msg: string;
			/** Error Type */
			type: string;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
	health_check_api_health_check_get: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': unknown;
				};
			};
		};
	};
	get_projects_api_projects__get: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ProjectSchema'][];
				};
			};
		};
	};
	create_project_api_projects__post: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['NewProjectSchema'];
			};
		};
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ProjectSchema'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	get_project_by_id_api_projects__project_id__get: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				project_id: number;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['ProjectSchema'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	login_for_access_token_api_auth_token_post: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody: {
			content: {
				'application/x-www-form-urlencoded': components['schemas']['Body_login_for_access_token_api_auth_token_post'];
			};
		};
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['Token'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
	register_api_auth_register_post: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['UserRegister'];
			};
		};
		responses: {
			/** @description Successful Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['Token'];
				};
			};
			/** @description Validation Error */
			422: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': components['schemas']['HTTPValidationError'];
				};
			};
		};
	};
}
